name: Pylint

on: push

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      py_exists: ${{ steps.check_py.outputs.py_exists }}
      req_exists: ${{ steps.check_req.outputs.req_exists }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check for Python files
        id: check_py
        run: |
          if find . -name "*.py" | grep -q .; then
            echo "py_exists=true" >> $GITHUB_ENV
          else
            echo "No Python files found. Skipping."
            echo "py_exists=false" >> $GITHUB_ENV
          fi

      - name: Check for requirements.txt
        id: check_req
        if: env.py_exists == 'true'
        run: |
          if [ ! -f requirements.txt ]; then
            echo "::error::No requirements.txt found. Failing the action."
            echo "req_exists=false" >> $GITHUB_ENV
            exit 1
          else
            echo "req_exists=true" >> $GITHUB_ENV
          fi

  linting:
    needs: check_files
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run Pylint
        run: |
          set -o pipefail
          pylint_output=$(find . -name "*.py" | xargs pylint || true)
          echo "$pylint_output"
          pylint_score=$(echo "$pylint_output" | grep "Your code has been rated at" | awk '{print $7}' | cut -d "/" -f 1)
          echo "Pylint score: $pylint_score"
          if (( $(echo "$pylint_score < 9.0" | bc -l) )); then
            exit 1
          fi
        shell: bash
